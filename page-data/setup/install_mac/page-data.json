{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/setup/install_mac/","result":{"data":{"mdx":{"id":"9d15c06b-a191-5bca-8812-8dfc1693a8d4","excerpt":"Both Mac OS X and Linux are based on the Unix operating system. Therefore your Mac has a pre-installed command-line\nenvironment running a shell that isâ€¦","fields":{"slug":"/setup/install_mac/"},"frontmatter":{"title":"How to setup PyTorch on a Mac","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to setup PyTorch on a Mac\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Both Mac OS X and Linux are based on the Unix operating system. Therefore your Mac has a pre-installed command-line\\nenvironment running a shell that is essentially \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bash\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"First open the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"terminal\"), \" application on your Mac.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To setup PyTorch:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If it's not already installed on your system make sure you have Python 3. Download the correct MacOS installer from\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.python.org/downloads/mac-osx/\"\n  }), \"https://www.python.org/downloads/mac-osx/\"), \" and use it to install Python3.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scroll to the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Get Started\"), \" part of \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.pytorch.org\"\n  }), \"pytorch.org\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Stable\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Mac\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"conda\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Python\"), \", and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"None\"), \" and cut and paste and run each line that doesn't start with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#\"), \"\\nin the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Run this command\"), \" box into your terminal on your Mac.  If you find out that you don't have conda installed,\\nchange the settings to use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"pip\"), \" instead.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check and see if PyTorch installed successfully by opening the Python interpreter (by entering \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"python3\"), \" at the command line)\\nand entering \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"import torch\"), \".  You shouldn't see an error. (Hit control-d to exit the interpreter.)\")))), mdx(\"p\", null, \"Notes on installing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matplotlib\"), \" on a Mac:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can install \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matplotlib\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pip3 install matplotlib\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But to get real-time graphs to pop up during training, you may need to change the matplotlib backend.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find the system-wide file named \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matplotlibrc\"), \".  For this you can try:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"cd /\\nfind . -name matplotlibrc\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then edit that file, and modify the relevant line to read:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"backend: TkAgg\\n\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/setup/install_mac/","next":{"label":"Introduction","link":"/"},"githubEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/setup/install_mac.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}