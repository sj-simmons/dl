{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/setup/dulib/","result":{"data":{"mdx":{"id":"aed5f656-bcc7-5da6-a4a5-b6190b51ef06","excerpt":"DUlib wraps PyTorch.  It was developed by students and faculty at the DL@DU\nProject.  Originally, it provided a library for training vanilla models afterâ€¦","fields":{"slug":"/setup/dulib/"},"frontmatter":{"title":"Obtaining DUlib","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Obtaining DUlib\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"DUlib wraps PyTorch.  It was developed by students and faculty at the DL@DU\\nProject.  Originally, it provided a library for training vanilla models after\\nautomatically wrangling data onto any GPU(s) that may be present. Recent\\nversions include a framework with which researchers can quickly experiment with\\nvarious flavors of networks.\"), mdx(\"p\", null, \"The latest release version lives at\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pypi.org/project/DUlib/\"\n  }), \"pypi.org/project/DUlib\"), \".  The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/sj-simmons/DUlib\"\n  }), \"upstream\\nrepo\"), \" houses the current development\\nversion.\"), mdx(\"p\", null, \"Current (Fall '20) students: please install the latest development release.\\n\", \"\\u2605\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/setup/dulib/","prev":{"label":"Cloud GPUs","link":"/setup/cloud"},"next":{"label":"Intro and access ","link":"/content/access"},"githubEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/setup/dulib.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}