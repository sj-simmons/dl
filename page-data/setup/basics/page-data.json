{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/setup/basics/","result":{"data":{"mdx":{"id":"967d56eb-34c9-5e48-9fbc-e8c0242d5fe7","excerpt":"The command line interface might, at first, seem primitive.  It's actually one of the most powerful tools in your\ntoolbox. In fact, one would rarely look overâ€¦","fields":{"slug":"/setup/basics/"},"frontmatter":{"title":"Working from the command line","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Working from the command line\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The command line interface might, at first, seem primitive.  It's actually one of the most powerful tools in your\\ntoolbox. In fact, one would rarely look over the shoulder of an experienced developer and not see a couple of open\\nterminal sessions running on their desktop.\"), mdx(\"p\", null, \"When you fire up the command-line environment on either bare-metal Linux, Ubuntu on Windows, a Mac, or in some cloud\\ninstance, a GUI terminal window pops up and a special interpreter called a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"shell\"), \" (by default, Bash shell) is\\nautomatically started.  Then you can issue commands into the terminal to create, move, or rename files or\\ndirectories, peruse your file-system, run programs, compile programs, (re)move/rename files, etc.\"), mdx(\"h2\", {\n    \"id\": \"essential-bash-commands\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#essential-bash-commands\",\n    \"aria-label\": \"essential bash commands permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Essential Bash commands\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Command\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Example usage\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"create\"), \" a sub\", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"directory\"), \" of the current directory\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"mkdir <dirname>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"mkdir project1\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"list contents\"), \" (of the current directory)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ls\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"ls\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"list contents\"), \" (of subdirectory of the current directory)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"ls project1/\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"list contents\"), \" with details\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"ls -l\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"list contents\"), \" including \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"dot\"), \" files\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"ls -a\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"change\"), \" (to a sub)\", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"directory\"), \" of the current directory\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cd  <dirname>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cd project1/\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"change\"), \" to your home \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"directory\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cd \", \"~\"), \" or just \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cd\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"change directory\"), \" (from any other directory)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cd ~/project\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"move up\"), \" one directory in the directory tree\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cd ..\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"change\"), \" to the previous \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"directory\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cd -\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"print working directory\"), \" (your current directory)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"pwd\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"pwd\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"edit\"), \" a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" in the current directory using vim\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"vim <file>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"vim filename\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"create\"), \" a new \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" and start editing it using vim\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"vim filename\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"edit\"), \" a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" in the current directory using nano\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"nano <file>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"nano filename\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"create\"), \" a new \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" and start editing it using nano\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"nano filename\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"move\"), \" (rename) a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" or directory\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"mv <source> <target>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"mv foo bar\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"copy\"), \" a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cp <source> <target>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cp foo bar\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"copy\"), \" a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"directory\"), \" and, recursively, all its subdirectories\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cp -R foo/ bar/\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"remove\"), \" a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rm <file>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"rm foo\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"remove\"), \" an empty \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"directory\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rmdir <directory>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"rmdir project1/\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"remove\"), \" a nonempty \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"directory\"), \" (be careful with this one)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rm -rf <directory>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"rm -rf tmp/\"))))), mdx(\"p\", null, \"Note: all of the commands above are already available in any Bash shell implementation.\"), mdx(\"h2\", {\n    \"id\": \"more-commands\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#more-commands\",\n    \"aria-label\": \"more commands permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"More commands\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Command\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Example usage\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"start\"), \" the \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Python3\"), \" interpreter\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"python3\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"python3\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"run\"), \" a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Python3 program\"), \" in the current directory\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"python3 <file>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"python3 program.py\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"page through (i.e., \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"view\"), \") a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" (type \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"q\"), \" to quit)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"less <file>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"less foo\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"A nice way to \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"view\"), \" a file a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" (type \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \":q\"), \" or ZZ to quit)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"view <file>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"view foo\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"spew\"), \" out a \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"file\"), \" (use less, instead, for large files)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cat <file>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"cat foo\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"view the \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"man\"), \"(ual) page for a command (hit \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"q\"), \" to quit)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"man <command>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"$ \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"man ls\"))))), mdx(\"p\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All of the commands above are very likely already available by default except possibly the last one, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"man\"), \", the\\ndatabase of which may need to be installed.  Issue the command \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install man\"), \" to install the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"man\"), \" pages.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"view\"), \" command is really just \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"vim -R\"), \"; that is, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"vim\"), \" with \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"read-only\"), \" switched on.  To install \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"vim\"), \", if it isn't\\nalready installed, type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install vim\"), \".\")), mdx(\"h2\", {\n    \"id\": \"other-hintstipstricks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#other-hintstipstricks\",\n    \"aria-label\": \"other hintstipstricks permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Other hints/tips/tricks\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"TAB\"), \" key to autocomplete names of files and directories on the command line after typing the first few\\nletters of the desired file or directory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"up\"), \" arrow to retrieve the previous command from your command history.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For a short, basic introduction to the command line see \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.linfo.org\"\n  }), \"linfo\"), \"'s page\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.linfo.org/command_line_lesson_1.html\"\n  }), \"How to use the Command Line -- A First Lesson\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Some slightly more technical references for Linux (in no particular order):\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://linuxcommand.org/lc3_learning_the_shell.php\"\n  }), \"Learning the Shell\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.techspot.com/guides/835-linux-command-line-basics/\"\n  }), \"A beginner's guide to the Linux command line\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://hacker-tools.github.io/shell/\"\n  }), \"shell and scripting page\"), \" is pretty good, from MIT's \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://hacker-tools.github.io/\"\n  }), \"Hacker Tools course\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Whenever Simmons creates a new Linux install, he adds at least these lines to the end of the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".bashrc\"), \"\\nfile in his home directory and then issues the command \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"source ~/.bashrc\"), \":\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"alias rm='rm -i'\\nalias mv='mv -i'\\nalias cp='cp -i'\\nset -o vi\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The first three commands add some safety features; namely, the requirement that you confirm when\\nremoving a file and when moving or copying a file that results in overwriting another file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The last command causes the command line in bash shell to behave like vim; so, for example, you\\ncan move through your history by hitting \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ESC\"), \" and then \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"j\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"k\"), \" instead of the arrow keys.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Whenever you modify \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".bashrc\"), \", for those changes to take effect you must either exit your bash\\nsession and start it anew or enter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"source ~/.bashrc\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Once you become handy with the basics of the command line, you can learn all sorts of wildly powerful techniques\\nincluding: composing operations using \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"pipes\"), \" and \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"redirects\"), \", working in multiplexers such as \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"tmux\"), \" or \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"screen\"), \",\\n\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"backgrounding/foregrounding\"), \" processes, etc.\")), mdx(\"h2\", {\n    \"id\": \"editing-files\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#editing-files\",\n    \"aria-label\": \"editing files permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Editing files\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A great solution for editing \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"and\"), \" running your Python code is to use the Python IDE called IDLE.  To install\\nIDLE on Ubuntu, run the command \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install idle3\"), \".  You start IDLE by entering \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"idle\"), \" on the command line --\\nor better yet, enter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"idle &\"), \" on the command line.  After you start IDLE, create a new file and write or paste\\nsome code into the window that pops up. Then click \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"run\"), \" on the IDLE menu.  Your workflow is just edit your\\ncode in IDLE and then click \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"run\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feel free to use any text editor you wish to create and modify your Python code. But realize that we typically run our\\nprograms from the command line. So if you use a GUI editor, point it to the correct directory.  That way your workflow\\nlooks something like:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open the program on which you are working in the editor you are using.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Work on the program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Save the program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Switch to the bash shell window.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-edit the program and repeat, as necessary.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To edit files, Simmons typically uses \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"vim\"), \" from the command line.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To start an editing session type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vim <filename>\"), \" in the directory in which the file resides, or\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vim program1.py\"), \", say, if you want to create a new file called \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"program1.py\"), \" and start editing it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"vimtutor\"), \" at the linux commandline for a tutorial on using vim.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here are some more vim tutorials:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.openvim.com/\"\n  }), \"Vim interactive tutorial\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.linfo.org\"\n  }), \"linfo\"), \" also has a \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.linfo.org/vi/index.html\"\n  }), \"vim tutorial\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.fprintf.net/vimCheatSheet.html\"\n  }), \"Vim command cheat sheet\"), \".\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Nano\"), \" is a rudimentary but intuitive text based editor.  On Ubuntu, if it's not already installed, type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install nano\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The basic gui editor \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"gedit\"), \" gets the job done.  On Ubuntu, install with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install gedit\"), \" and make sure you have\\nthe X server running. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gedit\"), \" is also available for Macs: try \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"brew install gedit\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://micro-editor.github.io/\"\n  }), \"micro\"), \" is a modern and intuitive terminal-based text editor.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On a Mac, the simplest way to create, edit, and run python is to use Idle, the default IDE that ships with Python3.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are all sorts of fancy gui editors, like \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://atom.io/\"\n  }), \"Atom\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.sublimetext.com/\"\n  }), \"Sublime Text\"), \",\\nnot to mention IDEs such as \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://code.visualstudio.com/\"\n  }), \"Visual Studio\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lastly, \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.geany.org/\"\n  }), \"Geany\"), \" is an editor that is also a lightweight IDE.\")), mdx(\"h2\", {\n    \"id\": \"moving-files-between-wsl-linux-and-windows-10\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#moving-files-between-wsl-linux-and-windows-10\",\n    \"aria-label\": \"moving files between wsl linux and windows 10 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Moving files between WSL Linux and Windows 10\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are running the Ubuntu WSL under Windows 10, then the partition in which your Windows 10 filesystem resides is mounted\\nin Ubuntu under the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/mnt\"), \" directory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Suppose that you, for example, download a file to your Windows \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Downloads\"), \" directory.\\nYou might want to move that file to your home directory in your Ubuntu. One way to do that is\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cd /mnt/c\"), \", to get the top directory in your Windows file system\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"then \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cd\"), \" down through the Windows directory tree to your Windows \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Downloads\"), \" directory\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cp <filename> ~\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cd\"), \" to return to your Ubuntu home directory -- the file should now be there.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Another way to do this is to use an ncurses based file manager like the popular Midnight Commander\\nto move files around.  Type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install mc\"), \" to install Midnight Commander and then \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mc\"), \" to start it.\")), mdx(\"h2\", {\n    \"id\": \"using-git\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#using-git\",\n    \"aria-label\": \"using git permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using Git\"), mdx(\"p\", null, \"You don't need to deep dive into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"git\"), \" right now unless you want to version control your own code, in which case\\nthe following references might be helpful.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A standard, \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control\"\n  }), \"fairly comprehensive reference\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www-cs-students.stanford.edu/~blynn/gitmagic/\"\n  }), \"Git magic\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://learngitbranching.js.org/\"\n  }), \"Git interactive tutorial\"), \" on branching\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Essential Bash commands"},{"depth":2,"value":"More commands"},{"depth":2,"value":"Other hints/tips/tricks"},{"depth":2,"value":"Editing files"},{"depth":2,"value":"Moving files between WSL Linux and Windows 10"},{"depth":2,"value":"Using Git"}]}},"pageContext":{"slug":"/setup/basics/","prev":{"label":"Dev environment","link":"/setup/dev_environ"},"next":{"label":"GPUs","link":"/setup/cloud"},"githubEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/setup/basics.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}